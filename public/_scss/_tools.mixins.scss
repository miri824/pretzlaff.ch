// Apply ‘attention’ styles in one go.
@mixin attention($self: false) {

    @if($self != false) {
        &,
        &:hover,
        &:active,
        &:focus {
            @content;
        }
    }

    @else {
        &:hover,
        &:active,
        &:focus {
            @content;
        }
    }
}

// Generate Ubuntu's numbered font-weights from their aliases.
// c.f. http://fonts.googleapis.com/css?family=Ubuntu:300,400,700
@mixin font-weight($font-weight) {

    @if ($font-weight == "light") {
        font-weight: 300;
    }

    @if ($font-weight == "regular") {
        font-weight: 400;
    }

    @if ($font-weight == "bold") {
        font-weight: 700;
    }
}

// Create all specified heading styles in one go.
@mixin headings($from: 1, $to: 6) {
    %base-heading {
        @content;
    }
    @if $from >= 1 and $to <= 6{
        @for $i from $from through $to{
            h#{$i} {
                @extend %base-heading;
            }
        }
    }
}

// @mixin visuallyhidden {
//     margin: -1px;
//     padding: 0;
//     width: 1px;
//     height: 1px;
//     overflow: hidden;
//     clip: rect(0 0 0 0);
//     clip: rect(0, 0, 0, 0);
//     position: absolute;
// }

// Maintain ratio mixin. Inspired from
// https://gist.github.com/brianmcallister/2932463
//
// $ratio - Ratio the element needs to maintain.
//
// Examples
//
//   // A 16:9 ratio would look like this:
//   .element {
//     @include ratio(16 9);
//   }
@mixin ratio($ratio: 1 1) {
  @if length($ratio) < 2 or length($ratio) > 2 {
    @warn "$ratio must be a list with two values.";
  }

  $width: 100%;
  $height: percentage(nth($ratio, 2) / nth($ratio, 1));
  &:before {
    content: '';
    display: block;
    width: $width;
    height: 0;
    padding-bottom: $height;
  }
}
